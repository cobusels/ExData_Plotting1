getwd()
setwd("C:\Rcode")
setwd("C:/Rcode")
getwd()
ls
dir
list
q()
getwd()
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
install.packages("ggplot2")
swirl()
swirl()
head(pollution)
dim(pollution)
freq(pollution$pm25)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
ablibe(h=12)
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = 'green', break=100)
hist(ppm, col = "green", break=100)
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v=12)
abline(v = 12)
abline(v = 12, lwd = 2)
abline(v=median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg)
barplot(reg, col = "wheat", main = "Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pollution, pm25~region, col = "red")
boxplot(data=pollution, pm25~region, col = "red")
boxplot(pm25~region, data=pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution, region = "east")
subset(pollution, region == "east")
east <- subset(pollution, region == "east")
head(east)
plot(east, col = "green")
plot(east$pm25, col = "green")
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west"), col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
plot(pollution, pm25~lattitude)
with(plot(pollution, pm25~lattitude))
with(pollution, plot(pm25~lattitude))
?with
with(pollution, plot(pm25, lattitude))
?plot
View(pollution)
with(pollution, plot(pm25, latitude))
with(pollution, plot(latitude, pm25))
abline(h=12, lty=2)
abline(h=12, lwd=12, lty=2)
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, pollution$pm25, col = pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plit(eruptions, waiting))
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed, max(cars$dist), "SWIRL rules!"))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income | region, data=state, c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, data = airquailty)
boxplot(Ozone~Month, data = airquality)
boxplot(Ozone~Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "Red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "Red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title("Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title("Ozone and Wind in New York City")
par()
lentght(par())
lenght(par())
length(par())
names(par())
par()$pin
par('fg')
par("pch")
par('lty')
plot(airquality$Wind, airquality$Ozone, type = "n")
title("Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
?points
points(may$Wind, may$Ozone, pch = 17, col = "blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", c(17,8), c("blue","red"), c("May", "Other Months"))
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
clear()
cls()
source('C:/gitrepos/ExData_Plotting1/plot4.R')
setwd("c:/gitrepos")
setwd("c:/gitrepos/ExData_Plotting1")
source('C:/gitrepos/ExData_Plotting1/plot4.R')
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile = "household_power_consumption.txt",
method = "auto",
mode = "w");
#COMMON: Loading and preparing file for graphics
#-----------------------------------------------
zlclfile <- "household_power_consumption.zip"
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile = zfile,
method = "auto",
mode = "w");
unzip(zipfile = zlclfile, overwite = TRUE)
#COMMON: Loading and preparing file for graphics
#-----------------------------------------------
zlclfile <- "household_power_consumption.zip"
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile = zfile,
method = "auto",
mode = "w");
unzip(zipfile = zlclfile, overwrite = TRUE)
#COMMON: Loading and preparing file for graphics
#-----------------------------------------------
zlclfile <- "household_power_consumption.zip"
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile = zlclfile,
method = "auto",
mode = "w");
unzip(zipfile = zlclfile, overwrite = TRUE)
#COMMON: Loading and preparing file for graphics
#-----------------------------------------------
zlclfile <- "household_power_consumption.zip"
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile = zlclfile,
method = "auto",
mode = "wb");
unzip(zipfile = zlclfile, overwrite = TRUE)
source('C:/gitrepos/ExData_Plotting1/plot4.R')
source('C:/gitrepos/ExData_Plotting1/plot4.R')
source('C:/gitrepos/ExData_Plotting1/plot3.R')
source('C:/gitrepos/ExData_Plotting1/plot2.R')
#Converting input date to R Date class & setting up a smaller filtered dataset
rawpowerdata$RDate <- as.Date(rawpowerdata$Date, format = "%d/%m/%Y")
rawpowerdata$RDateTime <- as.POSIXct(paste(rawpowerdata$Date, rawpowerdata$Time, sep = " "), format = "%d/%m/%Y %H:%M:%S")
filterdata <- subset(rawpowerdata, RDate == as.Date("2007-02-01") | RDate == as.Date("2007-02-02"))
#plot3
with (filterdata, {
plot(RDateTime,  Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering", col = "black")
points(RDateTime, Sub_metering_2, col = "red", type ="l")
points(RDateTime, Sub_metering_3, col = "blue" , type ="l")
})
legend("topright",  lwd=1, lty=1, col = c("black","red","blue"), legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
#copy to png device with proper size
dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
#plot2
plot(filterdata$RDateTime,  filterdata$Global_active_power, type = "l", xlab = "", ylab = "Global Acitve Power (kilowatts)")
#copy to png device with proper size
dev.copy(png, file = "plot2.png", width = 480, height = 480)
dev.off()
source('C:/gitrepos/ExData_Plotting1/plot1.R')
